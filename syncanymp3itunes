#!/bin/bash

###################################LICENCE#######################################
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#################################################################################

###################################VARIABLES#####################################
#Variables
MUSICDIR="/Users/jakubtymejczyk/Music/iTunes/iTunes Media/Music"
DAPDIR="/Volumes/PHONE CARD/music/music"
PLAYLIST="Hazel.txt"
WIDTH2=80

#Extra variables - do NOT touch
MUSICDIRL=${#MUSICDIR}
let MUSICDIRL=$MUSICDIRL+3
let WIDTH3=$WIDTH2-2
let CUT1=$WIDTH2-18
let CUT2=$CUT1-3
################################################################################

###################################FUNCTIONS####################################
#Leading zeros
function leadingzeros {
printf "%03d" $1
}

#progress
function progress {
PERCENT=$1
WIDTH=$2

let WIDTH=$WIDTH-1
let PRZED=($PERCENT*$WIDTH)/100
let PO=$WIDTH-$PRZED-2

bar="["

if [ $PRZED -gt 0 ]; then
	for i in $(eval echo {0..$PRZED}); do
		bar="$bar="
	done
else
	let PO=$PO+1
fi

if [ $PRZED -ne $WIDTH ]; then
	bar="$bar>"
fi

if [ $PO = 0 ]; then
	bar="$bar-"
fi

if [ $PO -gt 0 ]; then
	for i in $(eval echo {0..$PO}); do
		bar="$bar-" 
	done
fi

bar="$bar]"

echo "$bar"
}

trap ctrl_c INT
function ctrl_c() {
mv "$DAPDIR/$PLAYLIST.bak" "$DAPDIR/$PLAYLIST"
exit 1
}
################################################################################

###################################STEP 0: Exists?##############################
if [ ! -f "$DAPDIR/$PLAYLIST" -o ! -d "$DAPDIR" -o ! -d "$MUSICDIR" ]; then
echo "Check variables (playlist/musicdir/dapdir) or connect DAP.
Exit"
exit 1
fi
################################################################################


###################################STEP 1: Convert playlist#####################
cp "$DAPDIR/$PLAYLIST" "$DAPDIR/$PLAYLIST.bak"

iconv -c -f UTF-16LE -t UTF8 "$DAPDIR/$PLAYLIST" > "$DAPDIR/$PLAYLIST.work"
mv "$DAPDIR/$PLAYLIST.work" "$DAPDIR/$PLAYLIST"
tr '\r' '\n' < "$DAPDIR/$PLAYLIST" > "$DAPDIR/$PLAYLIST.work"
mv "$DAPDIR/$PLAYLIST.work" "$DAPDIR/$PLAYLIST"
################################################################################

###################################STEP 2: Get filenames########################
#On playlist
awk -F\t '{ print $27 }' "$DAPDIR/$PLAYLIST" | cut -c$MUSICDIRL- | sed -e '1d' -e 's/ - /\~/g' -e 's/:/ - /g' | sort > /tmp/cowon.e2.1
#On DAP
ls "$DAPDIR" | grep -v Hazel.txt | sort > /tmp/cowon.e2.2
################################################################################

###################################STEP 3: Differences##########################
diff /tmp/cowon.e2.1 /tmp/cowon.e2.2 > /tmp/cowon.e2.3
################################################################################

###################################STEP 4: Deleting#############################
grep ">" /tmp/cowon.e2.3 | sed -e 's/> //g' > /tmp/cowon.e2.4

I=1
ILE=`cat /tmp/cowon.e2.4 | wc -l | sed -e 's/ //g'`
ILE=`leadingzeros $ILE`

if [ $ILE = 000 ]; then
	echo -ne "Nothing to delete\r"
fi

cat /tmp/cowon.e2.4 | while read f; do
	h=`echo "$f" | sed -e 's/\.mp3//g'`
	LENGTH=${#h}
	if [ $LENGTH -gt $CUT1 ]; then
		h=`echo "$h" | cut -c-$CUT2`
		h="$h..."
	else
		let diff=$CUT1-$LENGTH
		while [ $diff -gt 0 ]; do
			h="$h."
			let diff--
		done
	fi
	let PERCENT=($I*100)/$ILE
	PERCENT=`leadingzeros $PERCENT`
	IE=`leadingzeros $I`
	echo "$IE/$ILE ($PERCENT%): < $h"
	rm "$DAPDIR/$f"
	let I++
done
################################################################################

echo ""

###################################STEP 5: Sizes and copying####################
grep "<" /tmp/cowon.e2.3 | sed -e 's/< //g' > /tmp/cowon.e2.4

I=1
ILE=`wc -l /tmp/cowon.e2.4 | sed -e 's/ //g' -e 's/\/tmp\/cowon.e2.4//g'`
ILE=`leadingzeros $ILE`

if [ $ILE = 000 ]; then
	echo -ne "Nothing to copy\r"
fi

#Get sizes of files
SIZE=0
while read f; do
	g=`echo $f | sed -e 's/ - /\//g' -e 's/\~/ - /g'`
	FILESIZE=`du -k "$MUSICDIR/$g" | awk '{ print $1 }'`
	let SIZE=$SIZE+$FILESIZE
	SIZES="$SIZES
$FILESIZE"
done < /tmp/cowon.e2.4

echo "$SIZES" | sed -e '1d' > /tmp/cowon.e2.sizes
#

cat /tmp/cowon.e2.4 | while read f; do
	g=`echo $f | sed -e 's/ - /\//g' -e 's/\~/ - /g'`
	h=`echo "$f" | sed -e 's/.mp3//g'`
	LENGTH=${#h}
	if [ $LENGTH -gt $CUT1 ]; then
		h=`echo "$h" | cut -c-$CUT2`
		h="$h..."
	else
		let diff=$CUT1-$LENGTH
		while [ $diff -gt 0 ]; do
			h="$h."
			let diff--
		done
	fi
	ACSIZE=`sed -n ''$I'p' /tmp/cowon.e2.sizes`
	let PROGRESS=$PROGRESS+$ACSIZE
	let PERCENT=($PROGRESS*100)/$SIZE
	PERCENTE=`leadingzeros $PERCENT`
	IE=`leadingzeros $I`
	bar2=`progress $PERCENT $WIDTH3`
	echo -ne "$IE/$ILE ($PERCENTE%): > $h
$bar2\r"
	cp "$MUSICDIR/$g" "$DAPDIR/$f"
	let I++
done
################################################################################

###################################STEP 6: Ending###############################
echo "
Removing temp files and restore playlist"
mv "$DAPDIR/$PLAYLIST.bak" "$DAPDIR/$PLAYLIST"
rm /tmp/cowon.e2*
rm "$DAPDIR/._"*
################################################################################

###################################AUTHOR: Jakub Tymejczyk######################
